/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

import { EditorThemeClasses } from "lexical"
import "./ComposerTheme.css"

export const ComposerTheme: EditorThemeClasses = {
  blockCursor: "composer__blockCursor",
  characterLimit: "composer__characterLimit",
  code: "composer__code",
  codeHighlight: {
    atrule: "composer__tokenAttr",
    attr: "composer__tokenAttr",
    boolean: "composer__tokenProperty",
    builtin: "composer__tokenSelector",
    cdata: "composer__tokenComment",
    char: "composer__tokenSelector",
    class: "composer__tokenFunction",
    "class-name": "composer__tokenFunction",
    comment: "composer__tokenComment",
    constant: "composer__tokenProperty",
    deleted: "composer__tokenProperty",
    doctype: "composer__tokenComment",
    entity: "composer__tokenOperator",
    function: "composer__tokenFunction",
    important: "composer__tokenVariable",
    inserted: "composer__tokenSelector",
    keyword: "composer__tokenAttr",
    namespace: "composer__tokenVariable",
    number: "composer__tokenProperty",
    operator: "composer__tokenOperator",
    prolog: "composer__tokenComment",
    property: "composer__tokenProperty",
    punctuation: "composer__tokenPunctuation",
    regex: "composer__tokenVariable",
    selector: "composer__tokenSelector",
    string: "composer__tokenSelector",
    symbol: "composer__tokenProperty",
    tag: "composer__tokenProperty",
    url: "composer__tokenOperator",
    variable: "composer__tokenVariable",
  },
  embedBlock: {
    base: "composer__embedBlock",
    focus: "composer__embedBlockFocus",
  },
  hashtag: "composer__hashtag",
  heading: {
    h1: "composer__h1",
    h2: "composer__h2",
    h3: "composer__h3",
    h4: "composer__h4",
    h5: "composer__h5",
    h6: "composer__h6",
  },
  image: "editor-image",
  indent: "composer__indent",
  inlineImage: "composer-inline-editor-image",
  link: "composer__link",
  list: {
    listitem: "composer__listItem",
    listitemChecked: "composer__listItemChecked",
    listitemUnchecked: "composer__listItemUnchecked",
    nested: {
      listitem: "composer__nestedListItem",
    },
    olDepth: ["composer__ol1", "composer__ol2", "composer__ol3", "composer__ol4", "composer__ol5"],
    ul: "composer__ul",
  },
  ltr: "composer__ltr",
  mark: "composer__mark",
  markOverlap: "composer__markOverlap",
  paragraph: "composer__paragraph",
  quote: "composer__quote",
  rtl: "composer__rtl",
  table: "composer__table",
  tableAddColumns: "composer__tableAddColumns",
  tableAddRows: "composer__tableAddRows",
  tableCell: "composer__tableCell",
  tableCellActionButton: "composer__tableCellActionButton",
  tableCellActionButtonContainer: "composer__tableCellActionButtonContainer",
  tableCellEditing: "composer__tableCellEditing",
  tableCellHeader: "composer__tableCellHeader",
  tableCellPrimarySelected: "composer__tableCellPrimarySelected",
  tableCellResizer: "composer__tableCellResizer",
  tableCellSelected: "composer__tableCellSelected",
  tableCellSortedIndicator: "composer__tableCellSortedIndicator",
  tableResizeRuler: "composer__tableCellResizeRuler",
  tableSelected: "composer__tableSelected",
  tableSelection: "composer__tableSelection",
  text: {
    bold: "composer__textBold",
    code: "composer__textCode",
    italic: "composer__textItalic",
    strikethrough: "composer__textStrikethrough",
    subscript: "composer__textSubscript",
    superscript: "composer__textSuperscript",
    underline: "composer__textUnderline",
    underlineStrikethrough: "composer__textUnderlineStrikethrough",
  },
}
